           SPELL=quill
if [[ $QUILL_GIT == y ]]
then
  if [[ $QUILL_GIT_AUTOUPDATE == y ]]
  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=git
  fi
          SOURCE=${SPELL}-git.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/${SPELL}-git
      SOURCE_URL=git://scm.sourcemage.org/smgl/misc/${SPELL}.git:${SPELL}-git
   SOURCE_IGNORE=volatile
  FORCE_DOWNLOAD=1
else
         VERSION=0.2.7
          SOURCE=$SPELL-$VERSION.tar.bz2
         SOURCE2=$SOURCE.sig
   SOURCE_URL[0]=http://download.sourcemage.org/projects/quill/$SOURCE
  SOURCE2_URL[0]=http://download.sourcemage.org/projects/quill/$SOURCE2
      SOURCE_GPG="quill.gpg:$SOURCE2:VERIFIED_UPSTREAM_KEY"
  SOURCE2_IGNORE=signature
SOURCE_DIRECTORY=${BUILD_DIRECTORY}/${SPELL}-${VERSION}
fi
        WEB_SITE=http://www.sourcemage.org
      LICENSE[0]=GPL
        KEYWORDS="smgl"
           SHORT="a spell creator and updater script."
cat << EOF
An interactive spell generator and updater script. It's meant to eventually
become the be-all for spell manipulation. It has support for moving the working
copy of the spell around, so any lacking features can easily be circumvented
manually (the old way).

Current set of features:
* spell creation with different levels of complexity (see quill -h)
* full fledged update mode that checks new urls and downloads the sources
* freshmeat metadata fetching for quicker work
* perl cpan metadata fetching for quicker work
* ruby-raa metadata fetching for quicker work
* copying the spell from and back to the grimoire
* copying the spell from and back to a local git grimoire (any scm actually)
* casting of the spell
* creating a tarball out of it for easy submission
* SOURCE and SOURCE_URL unexpansion, so later updates will be easy
* substitution of source urls with known mirror and spell variables
* dumping of default_build and similar functions for custom spell files
* sudo support for the copying cases where root privileges are required

Update mode highlights:
* url checking that also tries substituting the suffixes on failure (bz2<->gz)
* some multiversion support
* automatic HISTORY updates
* simple and automatically style-conformant adding of arbitrary HISTORY entries
* automatic removal of deprecated variables like UPDATED and MD5
* automatic removal of old signature files and PATCHLEVEL
* hash and gpg verification support on spell updates
* patchlevel handling

EOF
