           SPELL=bdb
         VERSION=0.6.0
     SOURCE_HASH=sha512:690fc90628a8665138d5b7e92634cc73e42b999669d4986163ee517ac089c3f560fbade5080fd95d55eb191c5c3453a0e9433ce7f7f4428a3f4e83ad20dcc0bc
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=ftp://moulon.inra.fr/pub/ruby/$SOURCE
        WEB_SITE=http://moulon.inra.fr/ruby/bdb.html
         ENTERED=20041207
      LICENSE[0]=GPL
        KEYWORDS="db database"
           SHORT="Berkeley DB is an embedded database system"
cat << EOF
Berkeley DB is an embedded database system that supports keyed access to data.

The library includes support for the following access methods:
  * B+tree: Stores keys in sorted order, using a default function that does lexicographical ordering of keys.
  * Hashing: Stores records in a hash table for fast searches based on strict equality, using a default that hashes on the key as a bit string.  Extended Linear Hashing modifies the hash function used by the table as new records are inserted, in order to keep buckets underfull in the steady state.
  * Fixed and Variable-Length Records: Stores fixed- or variable-length records in sequential order.  Record numbers may be immutable, requiring that new records be added only at the end of the database, or mutable, permitting new records to be inserted between existing records.
EOF
