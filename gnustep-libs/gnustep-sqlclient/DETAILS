           SPELL=gnustep-sqlclient
         VERSION=1.3.0
          SOURCE=SQLClient-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/SQLClient-$VERSION
   SOURCE_URL[0]=ftp://ftp.gnustep.org/pub/gnustep/libs/$SOURCE
        WEB_SITE=http://www.gnustep.org
     SOURCE_HASH=sha512:1239046006700905813b19adb0da5f95c0f865ce62b3f3cd531c1be0570b27654a73946e7b7e5fdc1029c1f4fa20fed5649c1e3cee17a5e2b10048c01a0b3b08
      LICENSE[0]=LGPL
         ENTERED=20060210
        KEYWORDS="sql gnustep libs"
           SHORT="GNUStep simple sql abstraction layer."
cat << EOF
The SQLClient library is designed to provide a simple interface to SQL
databases for GNUstep applications. It does not attempt the sort of
abstraction provided by the much more sophisticated GDL2 library
but rather allows applications to directly execute SQL queries and statements.

SQLClient provides for the Objective-C programmer much the same thing that
JDBC provides for the Java programmer (though SQLClient is a bit faster,
easier to use, and easier to add new database backends for than JDBC).

The major features of the SQLClient library are -

    * Simple API for executing queries and statements...
      a variable length sequence of comma separated strings and other
      objects (NSNumber, NSDate, NSData) are concatenated into a single
      SQL statement and executed.
    * Simple API for combining multiple SQL statements into a single
      transaction which can be used to minimise client-server interactions
      to get the best possible performance from your database.
    * Supports multiple sumultaneous named connections to a database server
      in a thread-safe manner.
    * Supports multiple simultaneous connections to different database
      servers with backend driver bundles loaded for different database
      engines. Clear, simple subclassing of the abstract base class to
      enable easy implementation of new backend bundles.
    * Configuration for all connections held in one place and referenced
      by connection name for ease of configuration control. Changes via
      NSUserDefaults can even allow reconfiguration of client instances
      within a running application.
    * Thread safe operation... The base class supports locking such that
      a single instance can be shared between multiple threads.
EOF

