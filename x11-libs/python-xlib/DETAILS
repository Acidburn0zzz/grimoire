           SPELL=python-xlib
         VERSION=0.13
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=$SOURCEFORGE_URL/python-xlib/$SOURCE
     SOURCE_HASH=sha512:5b73b66b98fc2c833caa9ec0feedef17e275f9641d14966b1432a8ed559228892383ce15fcb44c47002ae5f073c2c6c9f4db5389b5295321b224e2e35e6b0f62
      LICENSE[0]=GPL
        WEB_SITE=http://python-xlib.sourceforge.net
         ENTERED=20040430
        KEYWORDS="python x11 libs"
           SHORT='The Python X Library is intended to be a fully functional X client library for Python Programs.'
cat << EOF
The Python X Library is intended to be a fully functional X client library for Python programs. It is written entirely in Python, in contrast to earlier X libraries for Python (the ancient X extension and the newer plxlib) which were interfaces to the C Xlib. 

This is possible to do since X client programs communicate with the X server via the X protocol. The communication takes place over TCP/IP, Unix sockets, DECnet or any other suitable streaming network protocol. The C Xlib is merely an interface to this protocol, providing functions suited for a C environment. 

There are three advantages of choosing to implement a pure Python library: 

*Integration: The library can make use of the wonderful object system in Python, providing an easy-to-use class hierarchy. 
* Portability: The library will be usable on (almost) any computer which have Python installed. A C interface could be problematic to port to non-Unix systems, such as MS Windows or OpenVMS. 
* Maintainability: It is much easier to develop and debug native Python modules than modules written in C. 
EOF
