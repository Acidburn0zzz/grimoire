           SPELL=soprano
if [[ $SOP_VER = devel ]];then
         VERSION=svn
   SOURCE_IGNORE=volatile
  FORCE_DOWNLOAD=on
          SOURCE=$SPELL-svn.tar.bz2
   SOURCE_URL[0]=svn://anonsvn.kde.org/home/kde/trunk/kdesupport/$SPELL:$SPELL
else
# if [[ $SOP_VER = unstable ]];then
#         VERSION=2.3.0
#     SOURCE_HASH=sha512:
# else
         VERSION=2.3.0
     SOURCE_HASH=sha512:92a9e1130a77531e6ce0eb254d7fbf4f367b020bbe46ee13211d98c385c554e78ec4aea947b515f40e0c87cd18b41be5a9f6d874c78c3969837b21d6527a5ad4
# fi
          SOURCE=$SPELL-$VERSION.tar.bz2
   SOURCE_URL[0]=$SOURCEFORGE_URL/$SPELL/$SOURCE
fi
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
        WEB_SITE=http://$SPELL.SourceForge.net
      LICENSE[0]=GPL
         ENTERED=20070512
        KEYWORDS="RDF"
           SHORT="RDF QT/C++ interface library"
cat << EOF
Soprano (formally known as QRDF) is a library which provides a nice Qt
interface to RDF storage solutions. It has a modular structure which
allows to  replace the actual RDF storage implementation used.

Soprano has the following features:

* Full context (i.e. named graph) support
* Plugin structure for extensibility.
* Backend plugins for:
  - Redland
  - Sesame2
  - Virtuoso
* Parser and serializer plugins for:
  - raptor (rdf+xml, turtle, trig, nTriples)
  - nQuads
* A server and client lib which allows a simple remote
  Soprano server.
* SPARQL http enpoint support
* Simple sopranod server application.
* Simple command line tool to perform commands on models in
  a Soprano server (sopranocmd)
* Rule-based Forward inference engine.
* Full-text index based on CLucene which indexes all literal
  statements (i.e. those statements with a literal object node)
* Hierarchical architecture which allows to stack multiple filter models
  on top of an RDF storage.
EOF
