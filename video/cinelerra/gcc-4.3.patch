--- mjpegtools-1.6.3-rc1/mplex/inputstrm.cpp.orig  2008-04-28 09:32:46.000000000 +0200
+++ mjpegtools-1.6.3-rc1/mplex/inputstrm.cpp       2008-04-28 09:33:00.000000000 +0200
@@ -23,6 +23,7 @@

 #include <config.h>
 #include <assert.h>
+#include <climits>

 #include "mjpeg_types.h"
 #include "inputstrm.hpp"
--- /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/multiplexor.cpp.orig      2008-04-28 09:36:17.000000000 +0200
+++ /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/multiplexor.cpp   2008-04-28 09:39:09.000000000 +0200
@@ -22,6 +22,7 @@
 #include <config.h>
 #include <math.h>
 #include <stdlib.h>
+#include <cstring>

 #include <mjpeg_types.h>
 #include <mjpeg_logging.h>
--- /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/padstrm.cpp.orig  2008-04-28 09:40:17.000000000 +0200
+++ /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/padstrm.cpp       2008-04-28 09:40:31.000000000 +0200
@@ -23,7 +23,7 @@
 #ifdef HAVE_CONFIG_H
 #include "config.h"
 #endif
-
+#include <cstring>
 #include "padstrm.hpp"


--- /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/main.cpp.orig     2008-04-28 09:41:22.000000000 +0200
+++ /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mplex/main.cpp  2008-04-28 10:15:45.000000000 +0200
@@ -30,6 +30,7 @@
 #include <getopt.h>
 #endif
 #include <string>
+#include <cstring>
 #include <memory>
 #include <sys/stat.h>
 #ifndef _WIN32
--- /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mpeg2enc/encodertypes.h.orig    2008-04-28 11:07:10.000000000 +0200
+++ /usr/src/cinelerra-2.1/mjpegtools-1.6.3-rc1/mpeg2enc/encodertypes.h 2008-04-28 11:09:06.000000000 +0200
@@ -25,7 +25,8 @@


 #include "config.h"
-
+#include <cstdlib>
+#include <climits>


 class Parity
--- /usr/src/cinelerra-2.1/cinelerra/playback3d.h.orig	2008-04-28 15:27:03.000000000 +0200
+++ /usr/src/cinelerra-2.1/cinelerra/playback3d.h	2008-04-28 15:27:29.000000000 +0200
@@ -225,7 +225,7 @@
 // output - passed when rendering refresh frame.  If 0, the canvas is cleared.
 	void clear_output(Canvas *canvas, VFrame *output);
 
-	void do_fade(Canvas *canvas, VFrame *fade, float fade);
+	void do_fade(Canvas *canvas, VFrame *frame, float fade);
 
 	void do_mask(Canvas *canvas,
 		VFrame *output, 
