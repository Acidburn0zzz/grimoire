           SPELL=opmsg
         VERSION=1.75
          SOURCE=${SPELL}-rel-${VERSION}s.tar.gz
   SOURCE_URL[0]=https://github.com/stealth/${SPELL}/archive/rel-${VERSION}s.tar.gz
     SOURCE_HASH=sha512:09d2ddcbed26281dc30733d5d44d74b4474f4bcd1972f8bd47eb10eb7478d34df64348ff373e58582cdb5a93fb2d8514d5c711d4b234845768f659df17620dc4
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-rel-${VERSION}s"
        WEB_SITE=https://github.com/stealth/opmsg
      LICENSE[0]=GPL
         ENTERED=20170223
           SHORT="GPG alternative"
cat << EOF
opmsg is a replacement for GPG which can encrypt/sign/verify your mails or
create/verify detached signatures of local files. Even though the opmsg output
looks similar, the concept is entirely different.

Features:

* Perfect Forward Secrecy (PFS) by means of ECDH or DH Kex
* native EC or RSA fallback if no (EC)DH keys left
* fully compliant to existing SMTP/IMAP/POP etc. standards; no need to touch
  any mail daemon/client/agent code
* signing messages is mandatory
* OTR-like deniable signatures if demanded
* easy creation and throw-away of ids
* support for 1:1 key bindings to auto-select source key per destination
* adds the possibility to (re-)route messages different from mail address to
  defeat meta data collection
* configurable, well-established hash and crypto algorithms and key lengths
  (RSA, DH, ECC, AES, Chacha)
* straight forward and open key storage, basically also managable via cat,
  shred -u and ls on the cmdline
* seamless mutt integration
* Key format suitable for easy use with QR-codes
* optional cross-domain ECDH Kex
EOF
