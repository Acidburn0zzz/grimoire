           SPELL=qjackctl
if [[ $QJCTL_VCS == y ]]
then
  if [[ $QJCTL_VCS_AUTOUPDATE == y ]]
  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=cvs
  fi
          SOURCE=$SPELL-cvs.tar.bz2
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-cvs"
   SOURCE_URL[0]=cvs://:pserver:anonymous@qjackctl.cvs.sourceforge.net:/cvsroot/qjackctl:qjackctl
   SOURCE_IGNORE=volatile
  FORCE_DOWNLOAD=on
else
         VERSION=0.3.3
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
   SOURCE_URL[0]=$SOURCEFORGE_URL/$SPELL/$SOURCE
     SOURCE_HASH=sha512:45adf9ddd4a23208cad06e063c92e155473fe0817e10fb53b40b685b7dd3a329ac89d9d84a02963996b8f70eddf974b8ba6455961f7812cb1cbd6bda74e166bd
fi
        WEB_SITE=http://qjackctl.sf.net
         ENTERED=20031215
      LICENSE[0]=GPL
        KEYWORDS="jack qt tools audio"
           SHORT="A Qt application to control the JACK sound server daemon."
cat << EOF
QjackCtl is a simple Qt application to control the JACK sound server daemon,
specific for the Linux Audio Desktop infrastructure.
Written in C++ around the Qt4 toolkit for X11, most exclusively using Qt
Designer.
Provides a simple GUI dialog for setting several JACK daemon parameters,
which are properly saved between sessions, and a way control of the status
of the audio server daemon. With time, this primordial interface has become
richer by including a enhanced patchbay and connection control features.
EOF
