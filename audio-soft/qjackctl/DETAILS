           SPELL=qjackctl
if [[ $QJACKCTL_BRANCH == scm ]]
then
  if [[ $QJACKCTL_AUTOUPDATE == y ]]
  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=cvs
  fi
          SOURCE=$SPELL-cvs.tar.bz2
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-cvs"
   SOURCE_URL[0]=cvs://:pserver:anonymous@qjackctl.cvs.sourceforge.net:/cvsroot/qjackctl:qjackctl
   SOURCE_IGNORE=volatile
  FORCE_DOWNLOAD=on
else
         VERSION=0.3.11
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
   SOURCE_URL[0]=$SOURCEFORGE_URL/$SPELL/$SPELL/$VERSION/$SOURCE
     SOURCE_HASH=sha512:4fd14cd8da30d9b04b9eac32cc13a4a145c1b695b833e7d97a12fc1609b1e96faf7ce451d6f9dea4f9f664ab4a9a27c7bc5e596f3d8432e0eefdc0181d7f7167

fi
        WEB_SITE=http://qjackctl.sf.net
         ENTERED=20031215
      LICENSE[0]=GPL
        KEYWORDS="jack qt tools audio"
           SHORT="A Qt application to control the JACK sound server daemon."
cat << EOF
QjackCtl is a simple Qt application to control the JACK sound server daemon,
specific for the Linux Audio Desktop infrastructure.
Written in C++ around the Qt4 toolkit for X11, most exclusively using Qt
Designer.
Provides a simple GUI dialog for setting several JACK daemon parameters,
which are properly saved between sessions, and a way control of the status
of the audio server daemon. With time, this primordial interface has become
richer by including a enhanced patchbay and connection control features.
EOF
