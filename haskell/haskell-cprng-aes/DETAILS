           SPELL=haskell-cprng-aes
         VERSION=0.6.1
          SOURCE="cprng-aes-${VERSION}.tar.gz"
   SOURCE_URL[0]=https://hackage.haskell.org/package/cprng-aes-${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:839a3a449edf996b0061a989058ed59625d8a849e852217c047b9d9b59b58504c0efaca699f75beea3ebcad8284f55c1f53b523dbebb10f56e705506bfccb5f5
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/cprng-aes-${VERSION}"
        WEB_SITE="http://github.com/vincenthz/hs-cprng-aes"
      LICENSE[0]=BSD
         ENTERED=20150802
           SHORT="Crypto Pseudo Random Number Generator using AES in counter mode"
cat << EOF
Simple crypto pseudo-random-number-generator with really good randomness
property.

Using ent, a randomness property maker on one 1Mb sample: Entropy = 7.999837
bits per byte. Optimum compression would reduce the size of this 1048576
byte file by 0 percent. Chi square distribution for 1048576 samples is
237.02 Arithmetic mean value of data bytes is 127.3422 (127.5 = random)
Monte Carlo value for Pi is 3.143589568 (error 0.06 percent).

Compared to urandom with the same sampling: Entropy = 7.999831 bits per byte.
Optimum compression would reduce the size of this 1048576 byte file by 0
percent. Chi square distribution for 1048576 samples is 246.63 Arithmetic
mean value of data bytes is 127.6347 (127.5 = random). Monte Carlo value
for Pi is 3.132465868 (error 0.29 percent).
EOF
