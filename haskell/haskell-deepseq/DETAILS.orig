           SPELL=haskell-deepseq
         VERSION=1.3.0.1
          SOURCE="deepseq-${VERSION}.tar.gz"
   SOURCE_URL[0]=http://hackage.haskell.org/packages/archive/deepseq/${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:e04593845d9d1ec427a3448b9e5175e1c0842d55037cd05abd0cb7c3dbc5a5470a824f10c4e8f1fa8b6feae853ba9bdb0fe614e4c419c34298baf86c1f90b8d6
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/deepseq-${VERSION}"
        WEB_SITE="http://hackage.haskell.org/package/deepseq"
      LICENSE[0]=BSD3
         ENTERED=20111015
           SHORT="Deep evaluation of data structures"
cat << EOF
This package provides methods for fully evaluating data structures ("deep
evaluation"). Deep evaluation is often used for adding strictness to a
program, e.g. in order to force pending exceptions, remove space leaks, or
force lazy I/O to happen. It is also useful in parallel programs, to ensure
pending work does not migrate to the wrong thread.

The primary use of this package is via the 'deepseq' function, a "deep"
version of 'seq'. It is implemented on top of an 'NFData' typeclass ("Normal
Form Data", data structures with no unevaluated components) which defines
strategies for fully evaluating different data types.
EOF
