           SPELL=haskell-monad-control
         VERSION=0.3.2.1
          SOURCE="monad-control-${VERSION}.tar.gz"
   SOURCE_URL[0]=http://hackage.haskell.org/packages/archive/monad-control/${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:adcff15bbcda1cbf28e81bbe03cf6f0f4dd19735194081e88c1f9ba99335f1b275706b61be4af5fe7f234f9f59f6a96276457a7bb1ab7377483588cc320bb252
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/monad-control-${VERSION}"
        WEB_SITE="https://github.com/basvandijk/monad-control"
      LICENSE[0]=BSD3
         ENTERED=20130709
           SHORT="lift control operations"
cat << EOF
Description: This package defines the type class @MonadBaseControl@, a
subset of @MonadBase@ into which generic control operations such as @catch@
can be lifted from @IO@ or any other base monad. Instances are based on
monad transformers in @MonadTransControl@, which includes all standard monad
transformers in the @transformers@ library except @ContT@.

See the @lifted-base@ package which uses @monad-control@ to lift @IO@
operations from the @base@ library (like @catch@ or @bracket@) into any
monad that is an instance of @MonadBase@ or @MonadBaseControl@.

Note that this package is a rewrite of Anders Kaseorg's @monad-peel@
library. The main difference is that this package provides CPS style operators
and exploits the @RankNTypes@ and @TypeFamilies@ language extensions to
simplify and speedup most definitions.

The following @criterion@ based benchmark shows that @monad-control@ is on
average about 99% faster than @monad-peel@:

@git clone <https://github.com/basvandijk/bench-monad-peel-control>@
EOF
