           SPELL=happy
         VERSION=1.18.10
          SOURCE="${SPELL}-${VERSION}.tar.gz"
   SOURCE_URL[0]=http://hackage.haskell.org/packages/archive/${SPELL}/${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:e052b016bae9f255a9dfa7e4970a015cc5abfdd5216e6e4d4317c63890f154dd68da75aac1ac9bb5a8c84854e59066d0daed09c6ac4d4928ce93ecf4c8bcfb80
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="http://www.haskell.org/happy/"
      LICENSE[0]=BSD3
         ENTERED=20110326
           SHORT="Happy is a parser generator for Haskell"
cat << EOF
Happy is a parser generator system for Haskell, similar to the tool 'yacc'
for C. Like 'yacc', it takes a file containing an annotated BNF specification
of a grammar and produces a Haskell module containing a parser for the grammar.

Happy is flexible: you can have several Happy parsers in the same program,
and several entry points to a single grammar. Happy can work in conjunction
with a lexical analyser supplied by the user (either hand-written or generated
by another program), or it can parse a stream of characters directly (but
this isn't practical in most cases).

As of version 1.5, Happy is capable of parsing full Haskell. We have a
Haskell parser that uses Happy, which will shortly be part of the library
collection distributed with GHC.
EOF
