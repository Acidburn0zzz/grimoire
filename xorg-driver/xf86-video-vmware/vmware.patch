diff --git a/src/vmware.c b/src/vmware.c
index 6004677..b5a5099 100644
--- src/vmware.c
+++ src/vmware.c
@@ -146,38 +146,6 @@ static PciChipsets VMWAREPciChipsets[] = {
     { -1,		       -1,		    RES_UNDEFINED }
 };
 
-static const char *vgahwSymbols[] = {
-    "vgaHWGetHWRec",
-    "vgaHWGetIOBase",
-    "vgaHWGetIndex",
-    "vgaHWInit",
-    "vgaHWProtect",
-    "vgaHWRestore",
-    "vgaHWSave",
-    "vgaHWSaveScreen",
-    "vgaHWUnlock",
-    NULL
-};
-
-static const char *fbSymbols[] = {
-    "fbCreateDefColormap",
-    "fbPictureInit",
-    "fbScreenInit",
-    NULL
-};
-
-static const char *ramdacSymbols[] = {
-    "xf86CreateCursorInfoRec",
-    "xf86DestroyCursorInfoRec",
-    "xf86InitCursor",
-    NULL
-};
-
-static const char *shadowfbSymbols[] = {
-    "ShadowFBInit2",
-    NULL
-};
-
 #ifdef XFree86LOADER
 static XF86ModuleVersionInfo vmwareVersRec = {
     "vmware",
@@ -640,8 +608,6 @@ VMWAREPreInit(ScrnInfoPtr pScrn, int flags)
         return FALSE;
     }
 
-    xf86LoaderReqSymLists(vgahwSymbols, NULL);
-
     if (!vgaHWGetHWRec(pScrn)) {
         return FALSE;
     }
@@ -959,7 +925,6 @@ VMWAREPreInit(ScrnInfoPtr pScrn, int flags)
         VMWAREFreeRec(pScrn);
         return FALSE;
     }
-    xf86LoaderReqSymLists(fbSymbols, shadowfbSymbols, NULL);
 
     /* Need ramdac for hwcursor */
     if (pVMWARE->hwCursor) {
@@ -967,7 +932,6 @@ VMWAREPreInit(ScrnInfoPtr pScrn, int flags)
             VMWAREFreeRec(pScrn);
             return FALSE;
         }
-        xf86LoaderReqSymLists(ramdacSymbols, NULL);
     }
 
     return TRUE;
@@ -2051,9 +2015,6 @@ vmwareSetup(pointer module, pointer opts, int *errmaj, int *errmin)
         setupDone = TRUE;
         xf86AddDriver(&VMWARE, module, VMWARE_DRIVER_FUNC);
 
-        LoaderRefSymLists(vgahwSymbols, fbSymbols, ramdacSymbols,
-                          shadowfbSymbols, NULL);
-
         return (pointer)1;
     }
     if (errmaj) {
