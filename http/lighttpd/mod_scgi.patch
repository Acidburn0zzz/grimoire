--- src/mod_scgi.c.orig	2008-02-29 01:19:03.000000000 +0300
+++ src/mod_scgi.c	2008-09-03 09:02:52.221731772 +0400
@@ -202,6 +202,15 @@
 	 *
 	 */
 
+	/*
+	 * workaround for program when prefix="/"
+	 *
+	 * rule to build PATH_INFO is hardcoded for when check_local is disabled
+	 * enable this option to use the workaround
+	 *
+	 */
+
+	unsigned short fix_root_path_name;
 	ssize_t load; /* replace by host->load */
 
 	size_t max_id; /* corresponds most of the time to
@@ -968,6 +977,7 @@
 
 						{ "bin-environment",   NULL, T_CONFIG_ARRAY, T_CONFIG_SCOPE_CONNECTION },        /* 11 */
 						{ "bin-copy-environment", NULL, T_CONFIG_ARRAY, T_CONFIG_SCOPE_CONNECTION },     /* 12 */
+						{ "fix-root-scriptname",  NULL, T_CONFIG_BOOLEAN, T_CONFIG_SCOPE_CONNECTION },   /* 13 */
 
 
 						{ NULL,                NULL, T_CONFIG_UNSET, T_CONFIG_SCOPE_UNSET }
@@ -990,6 +1000,7 @@
 					df->max_load_per_proc = 1;
 					df->idle_timeout = 60;
 					df->disable_time = 60;
+					df->fix_root_path_name = 0;
 
 					fcv[0].destination = df->host;
 					fcv[1].destination = df->docroot;
@@ -1006,6 +1017,7 @@
 
 					fcv[11].destination = df->bin_env;
 					fcv[12].destination = df->bin_env_copy;
+					fcv[13].destination = &(df->fix_root_path_name);
 
 
 					if (0 != config_insert_values_internal(srv, da_host->value, fcv)) {
@@ -2790,6 +2802,10 @@
 
 					con->uri.path->used -= con->request.pathinfo->used - 1;
 					con->uri.path->ptr[con->uri.path->used - 1] = '\0';
+				} else if (host->fix_root_path_name && extension->key->ptr[0] == '/' && extension->key->ptr[1] == '\0') {
+					buffer_copy_string(con->request.pathinfo, con->uri.path->ptr);
+					con->uri.path->used = 1;
+					con->uri.path->ptr[con->uri.path->used - 1] = '\0';
 				}
 			}
 			return HANDLER_GO_ON;
