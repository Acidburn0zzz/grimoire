diff -Naur apache_1.3.41.orig/src/CHANGES apache_1.3.41/src/CHANGES
--- apache_1.3.41.orig/src/CHANGES	2009-09-04 03:25:47.985940104 +0200
+++ apache_1.3.41/src/CHANGES	2009-09-04 03:38:00.517933711 +0200
@@ -3838,7 +3838,7 @@
      response when we already know the final status, which is mighty
      useful for PUT responses that result in 302 or 401. [Roy Fielding]
 
-  *) Remove extra trailing whitespace from the getline results as part
+  *) Remove extra trailing whitespace from the apache_getline results as part
      of the protocol processing, which is extra nice because it works
      between continuation lines, is almost no cost in the normal case
      of no extra whitespace, and saves memory. [Roy Fielding]
diff -Naur apache_1.3.41.orig/src/makefile.win apache_1.3.41/src/makefile.win
--- apache_1.3.41.orig/src/makefile.win	2009-09-04 03:25:47.977940271 +0200
+++ apache_1.3.41/src/makefile.win	2009-09-04 03:38:00.629935291 +0200
@@ -238,7 +238,7 @@
         dstfl = ARGV[2];
         serverroot = ARGV[3];
         gsub( /\\/, "/", serverroot );
-        while ( ( getline < srcfl ) > 0 ) {
+        while ( ( apache_getline < srcfl ) > 0 ) {
             gsub( /@@ServerRoot@@/, serverroot );
             print $$0 > dstfl;
         }
diff -Naur apache_1.3.41.orig/src/support/htdigest.c apache_1.3.41/src/support/htdigest.c
--- apache_1.3.41.orig/src/support/htdigest.c	2009-09-04 03:25:47.961939627 +0200
+++ apache_1.3.41/src/support/htdigest.c	2009-09-04 03:38:00.869950312 +0200
@@ -71,7 +71,7 @@
     while ((line[y++] = line[x++]));
 }
 
-static int getline(char *s, int n, FILE *f)
+static int apache_getline(char *s, int n, FILE *f)
 {
     register int i = 0;
 
@@ -158,7 +158,7 @@
 {
     static char line[MAX_STRING_LEN];
 
-    while (!(getline(line, MAX_STRING_LEN, source))) {  
+    while (!(apache_getline(line, MAX_STRING_LEN, source))) {  
 	putline(target, line);
     }
 }
@@ -216,7 +216,7 @@
     ap_cpystrn(realm, argv[2], sizeof(realm));
 
     found = 0;
-    while (!(getline(line, MAX_STRING_LEN, f))) {
+    while (!(apache_getline(line, MAX_STRING_LEN, f))) {
 	if (found || (line[0] == '#') || (!line[0])) {
 	    putline(tfp, line);
 	    continue;
diff -Naur apache_1.3.41.orig/src/support/htpasswd.c apache_1.3.41/src/support/htpasswd.c
--- apache_1.3.41.orig/src/support/htpasswd.c	2009-09-04 03:25:47.961939627 +0200
+++ apache_1.3.41/src/support/htpasswd.c	2009-09-04 03:38:00.933935289 +0200
@@ -98,7 +98,7 @@
  * Get a line of input from the user, not including any terminating
  * newline.
  */
-static int getline(char *s, int n, FILE *f)
+static int apache_getline(char *s, int n, FILE *f)
 {
     register int i = 0;
 
@@ -547,7 +547,7 @@
 	char scratch[MAX_STRING_LEN];
 
 	fpw = fopen(pwfilename, "r");
-	while (! (getline(line, sizeof(line), fpw))) {
+	while (! (apache_getline(line, sizeof(line), fpw))) {
 	    char *colon;
 
 	    if ((line[0] == '#') || (line[0] == '\0')) {
diff -Naur apache_1.3.41.orig/src/support/logresolve.c apache_1.3.41/src/support/logresolve.c
--- apache_1.3.41.orig/src/support/logresolve.c	2009-09-04 03:25:47.961939627 +0200
+++ apache_1.3.41/src/support/logresolve.c	2009-09-04 03:38:01.037948767 +0200
@@ -71,7 +71,7 @@
 #endif /* !MPE && !WIN32*/
 
 static void cgethost(struct in_addr ipnum, char *string, int check);
-static int getline(char *s, int n);
+static int apache_getline(char *s, int n);
 static void stats(FILE *output);
 
 
@@ -278,7 +278,7 @@
  * gets a line from stdin
  */
 
-static int getline (char *s, int n)
+static int apache_getline (char *s, int n)
 {
     char *cp;
 
@@ -326,7 +326,7 @@
     for (i = 0; i < MAX_ERR + 2; i++)
 	errors[i] = 0;
 
-    while (getline(line, MAXLINE)) {
+    while (apache_getline(line, MAXLINE)) {
 	if (line[0] == '\0')
 	    continue;
 	entries++;
