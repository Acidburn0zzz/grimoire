           SPELL=ctorrent
         VERSION=3.3.2
          SOURCE=$SPELL-dnh$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-dnh$VERSION
   SOURCE_URL[0]=http://downloads.sourceforge.net/sourceforge/dtorrent/$SOURCE
      SOURCE_GPG="gurus.gpg:$SOURCE.sig:WORKS_FOR_ME"
        WEB_SITE=http://www.rahul.net/dholmes/ctorrent/
         ENTERED=20040425
#     SOURCE_HASH=sha512:8713f08fde272346f5b0505ce03d230c4db08e4f683174873a3b10c99d5740e2014c8d9149c9a53ea2741aa7f8522d5ad583e325f60c5dac331cb1402abd743e
      LICENSE[0]=GPL
	   BUILD_API=2
        KEYWORDS="bittorrent terminal ftp"
           SHORT="Enhanced CTorrent is a terminal based BitTorrent client"
cat << EOF
Enhanced CTorrent is a terminal based BitTorrent client.

The original has fallen a little behind in updates and bug fixes though.

The files here contain the good work of those who wrote the original CTorrent
base code and a number of patches that provide fixes and enhancements, as well
as additional fixes and enhancements that I am contributing. I am not the
original author, current maintainer, or any other official representative of
CTorrent. The files on this page are not the original or official CTorrent
distribution. I encourage you to visit the CTorrent project page on SourceForge
for further information.

The purpose of the Enhanced CTorrent effort is to fix problems that remain in
the code, modernize existing features and algorithms, and implement new
features while maintaining low overhead requirements and a high standard of
performance (both part of the original CTorrent design philosophy). Highlights
of the enhanced client include:
  * Support for large files (>2GB) and large torrents (>255 files)
  * Strategic selection of pieces to request for download
  * Continuous queueing of download requests, tuned based on latency and
    throughput for each peer
  * Improved download performance, including parallel requests in initial and
    endgame modes
  * Improved bandwidth regulation
  * Improved compatibility with other peers
  * Performance optimization and bug fixes
  * An interface for monitoring and managing multiple clients
  * Dynamic cache allocation and management, including prefetch
  * Flexible console I/O redirection
  * Interactive control commands and menus
EOF
