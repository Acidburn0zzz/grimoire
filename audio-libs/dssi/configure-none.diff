--- configure	2005-10-12 20:07:38.000000000 +0300
+++ configure.none	2006-07-27 18:26:16.000000000 +0300
@@ -19995,71 +19995,8 @@
 
   fi
 
-  if test "$PKG_CONFIG" = "no" ; then
-     echo "*** The pkg-config script could not be found. Make sure it is"
-     echo "*** in your path, or set the PKG_CONFIG environment variable"
-     echo "*** to the full path to pkg-config."
-     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
-  else
-     PKG_CONFIG_MIN_VERSION=0.9.0
-     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for liblo >= 0.12" >&5
-echo $ECHO_N "checking for liblo >= 0.12... $ECHO_C" >&6
-
-        if $PKG_CONFIG --exists "liblo >= 0.12" ; then
-            echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-            succeeded=yes
-
-            echo "$as_me:$LINENO: checking LIBLO_CFLAGS" >&5
-echo $ECHO_N "checking LIBLO_CFLAGS... $ECHO_C" >&6
-            LIBLO_CFLAGS=`$PKG_CONFIG --cflags "liblo >= 0.12"`
-            echo "$as_me:$LINENO: result: $LIBLO_CFLAGS" >&5
-echo "${ECHO_T}$LIBLO_CFLAGS" >&6
-
-            echo "$as_me:$LINENO: checking LIBLO_LIBS" >&5
-echo $ECHO_N "checking LIBLO_LIBS... $ECHO_C" >&6
-            LIBLO_LIBS=`$PKG_CONFIG --libs "liblo >= 0.12"`
-            echo "$as_me:$LINENO: result: $LIBLO_LIBS" >&5
-echo "${ECHO_T}$LIBLO_LIBS" >&6
-        else
-            LIBLO_CFLAGS=""
-            LIBLO_LIBS=""
-            ## If we have a custom action on failure, don't print errors, but
-            ## do set a variable so people can do so.
-            LIBLO_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "liblo >= 0.12"`
-
-        fi
-
-
-
-     else
-        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
-        echo "*** See http://www.freedesktop.org/software/pkgconfig"
-     fi
-  fi
-
-  if test $succeeded = yes; then
-     with_liblo=yes
-  else
-     with_liblo=no
-  fi
-
-
-
-
-
-if test x$with_liblo = xyes; then
-  HAVE_LIBLO_TRUE=
-  HAVE_LIBLO_FALSE='#'
-else
   HAVE_LIBLO_TRUE='#'
   HAVE_LIBLO_FALSE=
-fi
-
-
-
-  succeeded=no
 
   if test -z "$PKG_CONFIG"; then
     # Extract the first word of "pkg-config", so it can be a program name with args.
@@ -20104,71 +20041,8 @@
 
   fi
 
-  if test "$PKG_CONFIG" = "no" ; then
-     echo "*** The pkg-config script could not be found. Make sure it is"
-     echo "*** in your path, or set the PKG_CONFIG environment variable"
-     echo "*** to the full path to pkg-config."
-     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
-  else
-     PKG_CONFIG_MIN_VERSION=0.9.0
-     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for jack" >&5
-echo $ECHO_N "checking for jack... $ECHO_C" >&6
-
-        if $PKG_CONFIG --exists "jack" ; then
-            echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-            succeeded=yes
-
-            echo "$as_me:$LINENO: checking JACK_CFLAGS" >&5
-echo $ECHO_N "checking JACK_CFLAGS... $ECHO_C" >&6
-            JACK_CFLAGS=`$PKG_CONFIG --cflags "jack"`
-            echo "$as_me:$LINENO: result: $JACK_CFLAGS" >&5
-echo "${ECHO_T}$JACK_CFLAGS" >&6
-
-            echo "$as_me:$LINENO: checking JACK_LIBS" >&5
-echo $ECHO_N "checking JACK_LIBS... $ECHO_C" >&6
-            JACK_LIBS=`$PKG_CONFIG --libs "jack"`
-            echo "$as_me:$LINENO: result: $JACK_LIBS" >&5
-echo "${ECHO_T}$JACK_LIBS" >&6
-        else
-            JACK_CFLAGS=""
-            JACK_LIBS=""
-            ## If we have a custom action on failure, don't print errors, but
-            ## do set a variable so people can do so.
-            JACK_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "jack"`
-
-        fi
-
-
-
-     else
-        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
-        echo "*** See http://www.freedesktop.org/software/pkgconfig"
-     fi
-  fi
-
-  if test $succeeded = yes; then
-     with_jack=yes
-  else
-     with_jack=no
-  fi
-
-
-
-
-
-if test x$with_jack = xyes; then
-  HAVE_JACK_TRUE=
-  HAVE_JACK_FALSE='#'
-else
   HAVE_JACK_TRUE='#'
   HAVE_JACK_FALSE=
-fi
-
-
-
-  succeeded=no
 
   if test -z "$PKG_CONFIG"; then
     # Extract the first word of "pkg-config", so it can be a program name with args.
@@ -20213,59 +20087,6 @@
 
   fi
 
-  if test "$PKG_CONFIG" = "no" ; then
-     echo "*** The pkg-config script could not be found. Make sure it is"
-     echo "*** in your path, or set the PKG_CONFIG environment variable"
-     echo "*** to the full path to pkg-config."
-     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
-  else
-     PKG_CONFIG_MIN_VERSION=0.9.0
-     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for sndfile" >&5
-echo $ECHO_N "checking for sndfile... $ECHO_C" >&6
-
-        if $PKG_CONFIG --exists "sndfile" ; then
-            echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-            succeeded=yes
-
-            echo "$as_me:$LINENO: checking SNDFILE_CFLAGS" >&5
-echo $ECHO_N "checking SNDFILE_CFLAGS... $ECHO_C" >&6
-            SNDFILE_CFLAGS=`$PKG_CONFIG --cflags "sndfile"`
-            echo "$as_me:$LINENO: result: $SNDFILE_CFLAGS" >&5
-echo "${ECHO_T}$SNDFILE_CFLAGS" >&6
-
-            echo "$as_me:$LINENO: checking SNDFILE_LIBS" >&5
-echo $ECHO_N "checking SNDFILE_LIBS... $ECHO_C" >&6
-            SNDFILE_LIBS=`$PKG_CONFIG --libs "sndfile"`
-            echo "$as_me:$LINENO: result: $SNDFILE_LIBS" >&5
-echo "${ECHO_T}$SNDFILE_LIBS" >&6
-        else
-            SNDFILE_CFLAGS=""
-            SNDFILE_LIBS=""
-            ## If we have a custom action on failure, don't print errors, but
-            ## do set a variable so people can do so.
-            SNDFILE_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "sndfile"`
-
-        fi
-
-
-
-     else
-        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
-        echo "*** See http://www.freedesktop.org/software/pkgconfig"
-     fi
-  fi
-
-  if test $succeeded = yes; then
-     with_sndfile=yes
-  else
-     with_sndfile=no
-  fi
-
-
-  succeeded=no
-
   if test -z "$PKG_CONFIG"; then
     # Extract the first word of "pkg-config", so it can be a program name with args.
 set dummy pkg-config; ac_word=$2
@@ -20309,134 +20130,8 @@
 
   fi
 
-  if test "$PKG_CONFIG" = "no" ; then
-     echo "*** The pkg-config script could not be found. Make sure it is"
-     echo "*** in your path, or set the PKG_CONFIG environment variable"
-     echo "*** to the full path to pkg-config."
-     echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
-  else
-     PKG_CONFIG_MIN_VERSION=0.9.0
-     if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-        echo "$as_me:$LINENO: checking for samplerate" >&5
-echo $ECHO_N "checking for samplerate... $ECHO_C" >&6
-
-        if $PKG_CONFIG --exists "samplerate" ; then
-            echo "$as_me:$LINENO: result: yes" >&5
-echo "${ECHO_T}yes" >&6
-            succeeded=yes
-
-            echo "$as_me:$LINENO: checking SRC_CFLAGS" >&5
-echo $ECHO_N "checking SRC_CFLAGS... $ECHO_C" >&6
-            SRC_CFLAGS=`$PKG_CONFIG --cflags "samplerate"`
-            echo "$as_me:$LINENO: result: $SRC_CFLAGS" >&5
-echo "${ECHO_T}$SRC_CFLAGS" >&6
-
-            echo "$as_me:$LINENO: checking SRC_LIBS" >&5
-echo $ECHO_N "checking SRC_LIBS... $ECHO_C" >&6
-            SRC_LIBS=`$PKG_CONFIG --libs "samplerate"`
-            echo "$as_me:$LINENO: result: $SRC_LIBS" >&5
-echo "${ECHO_T}$SRC_LIBS" >&6
-        else
-            SRC_CFLAGS=""
-            SRC_LIBS=""
-            ## If we have a custom action on failure, don't print errors, but
-            ## do set a variable so people can do so.
-            SRC_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "samplerate"`
-
-        fi
-
-
-
-     else
-        echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
-        echo "*** See http://www.freedesktop.org/software/pkgconfig"
-     fi
-  fi
-
-  if test $succeeded = yes; then
-     with_SRC=yes
-  else
-     with_SRC=no
-  fi
-
-
-
-
-
-
-echo "$as_me:$LINENO: checking whether QTDIR environment variable is set" >&5
-echo $ECHO_N "checking whether QTDIR environment variable is set... $ECHO_C" >&6
-if test "x${QTDIR}" = x ; then
-  echo "$as_me:$LINENO: result: no" >&5
-echo "${ECHO_T}no" >&6
-  echo "$as_me:$LINENO: checking for Qt library" >&5
-echo $ECHO_N "checking for Qt library... $ECHO_C" >&6
-  for qq in /usr/lib/qt3 /usr/qt/3 /usr/share/qt /usr/share/qt3 /usr/lib/qt-3.1 /usr/lib/qt31 /usr/local/qt31 /usr/local/qt3 /usr/lib/qt /usr/local/qt
-  do
-    if test "x${QTDIR}" = x -a \( -f $qq/lib/libqt-mt.so -o -f $qq/lib/libqt-mt.a \)
-    then
-      QTDIR=$qq
-    fi
-  done
-  if test "x${QTDIR}" = x ; then
-    with_qt=no
-    echo "$as_me:$LINENO: result: none found. Perhaps you need to set QTDIR?" >&5
-echo "${ECHO_T}none found. Perhaps you need to set QTDIR?" >&6
-  else
-    with_qt=yes
-    echo "$as_me:$LINENO: result: found one in $QTDIR/lib" >&5
-echo "${ECHO_T}found one in $QTDIR/lib" >&6
-  fi
-else
-  echo "$as_me:$LINENO: result: $QTDIR" >&5
-echo "${ECHO_T}$QTDIR" >&6
-  echo "$as_me:$LINENO: checking for Qt library" >&5
-echo $ECHO_N "checking for Qt library... $ECHO_C" >&6
-  if test -f $QTDIR/lib/libqt-mt.so -o -f $QTDIR/lib/libqt-mt.a; then
-    with_qt=yes
-    echo "$as_me:$LINENO: result: in $QTDIR/lib" >&5
-echo "${ECHO_T}in $QTDIR/lib" >&6
-  else
-    with_qt=no
-    echo "$as_me:$LINENO: result: no. Perhaps QTDIR is not set correctly?" >&5
-echo "${ECHO_T}no. Perhaps QTDIR is not set correctly?" >&6
-  fi
-fi
-if test "x${with_qt}" = xyes ; then
-  if test "x${QTINCDIR}" != x ; then
-    QT_CXXFLAGS="-I${QTINCDIR}"
-  else
-    QT_CXXFLAGS="-I${QTDIR}/include"
-  fi
-  if test "x${QTLIBDIR}" != x ; then
-    QT_LIBS="-L${QTLIBDIR} -lqt-mt"
-  else
-    QT_LIBS="-L${QTDIR}/lib -lqt-mt"
-  fi
-  if test "x${MOC}" != x ; then
-    QT_MOC="${MOC}"
-  else
-    QT_MOC="${QTDIR}/bin/moc"
-  fi
-  # dnl Check for Qt moc utility.
-  # AC_PATH_PROG(ac_moc, moc, [no])
-  # if test "x$ac_moc" = "xno"; then
-  #    AC_MSG_ERROR([moc $ac_qtdir_errmsg])
-  # fi
-  # AC_SUBST(ac_moc)
-fi
-
-
-
-
-
-if test x$with_qt = xyes; then
-  HAVE_QT_TRUE=
-  HAVE_QT_FALSE='#'
-else
   HAVE_QT_TRUE='#'
   HAVE_QT_FALSE=
-fi
 
 
 case "${host_os}" in
@@ -20477,43 +20172,10 @@
   esac
 fi
 
-jack_dssi_host_needs=''
-dssi_osc_tools_needs=''
-trivial_sampler_needs=''
-less_trivial_synth_gui_needs=''
-trivial_sampler_gui_needs=''
-if test "x$with_liblo" != xyes ; then
-    jack_dssi_host_needs="$jack_dssi_host_needs liblo"
-    dssi_osc_tools_needs="$dssi_osc_tools_needs liblo"
-    less_trivial_synth_gui_needs="$less_trivial_synth_gui_needs liblo"
-    trivial_sampler_gui_needs="$trivial_sampler_gui_needs liblo"
-fi
-if test "x$with_jack" != xyes ; then
-    jack_dssi_host_needs="$jack_dssi_host_needs JACK"
-fi
-if test "x$with_sndfile" != xyes ; then
-    trivial_sampler_needs="$trivial_sampler_needs libsndfile"
-    trivial_sampler_gui_needs="$trivial_sampler_gui_needs libsndfile"
-fi
-if test "x$with_SRC" != xyes ; then
-    trivial_sampler_needs="$trivial_sampler_needs libsamplerate"
-fi
-
-
-if test -z "$trivial_sampler_needs"; then
-  BUILD_SAMPLER_TRUE=
-  BUILD_SAMPLER_FALSE='#'
-else
-  BUILD_SAMPLER_TRUE='#'
-  BUILD_SAMPLER_FALSE=
-fi
+BUILD_SAMPLER_TRUE='#'
+BUILD_SAMPLER_FALSE=
 
-if test "x$with_qt" != xyes ; then
-    less_trivial_synth_gui_needs="$less_trivial_synth_gui_needs Qt"
-    trivial_sampler_gui_needs="$trivial_sampler_gui_needs Qt"
-fi
-
-                                                  ac_config_files="$ac_config_files Makefile dssi.pc jack-dssi-host/Makefile examples/Makefile tests/Makefile"
+                                                  ac_config_files="$ac_config_files Makefile dssi.pc tests/Makefile"
 cat >confcache <<\_ACEOF
 # This file is a shell script that caches the results of configure
 # tests run on this system so they can be shared between configure
@@ -21107,8 +20769,6 @@
   # Handling of arguments.
   "Makefile" ) CONFIG_FILES="$CONFIG_FILES Makefile" ;;
   "dssi.pc" ) CONFIG_FILES="$CONFIG_FILES dssi.pc" ;;
-  "jack-dssi-host/Makefile" ) CONFIG_FILES="$CONFIG_FILES jack-dssi-host/Makefile" ;;
-  "examples/Makefile" ) CONFIG_FILES="$CONFIG_FILES examples/Makefile" ;;
   "tests/Makefile" ) CONFIG_FILES="$CONFIG_FILES tests/Makefile" ;;
   "depfiles" ) CONFIG_COMMANDS="$CONFIG_COMMANDS depfiles" ;;
   "config.h" ) CONFIG_HEADERS="$CONFIG_HEADERS config.h" ;;
@@ -22009,31 +21669,3 @@
 
 
 echo "* ======== DSSI ${PACKAGE_VERSION} configured ========"
-
-if test -z "$jack_dssi_host_needs" ; then
-    echo "* building jack-dssi-host:            yes"
-else
-    echo "* building jack-dssi-host:            no (missing$jack_dssi_host_needs)"
-fi
-if test -z "$dssi_osc_tools_needs" ; then
-    echo "* building DSSI OSC tools:            yes"
-else
-    echo "* building DSSI OSC tools:            no (missing$dssi_osc_tools_needs)"
-fi
-echo "* building trivial_synth plugin:      yes"
-echo "* building less_trivial_synth plugin: yes"
-if test -z "$trivial_sampler_needs" ; then
-    echo "* building trivial_sampler plugin:    yes"
-else
-    echo "* building trivial_sampler plugin:    no (missing$trivial_sampler_needs)"
-fi
-if test -z "$less_trivial_synth_gui_needs" ; then
-    echo "* building less_trivial_synth GUI:    yes"
-else
-    echo "* building less_trivial_synth GUI:    no (missing$less_trivial_synth_gui_needs)"
-fi
-if test -z "$trivial_sampler_gui_needs" ; then
-    echo "* building trivial_sampler GUI:       yes"
-else
-    echo "* building trivial_sampler GUI:       no (missing$trivial_sampler_gui_needs)"
-fi
