           SPELL=sslh
         VERSION=1.16
          SOURCE="$SPELL-v$VERSION.tar.gz"
   SOURCE_URL[0]=http://www.rutschle.net/tech/$SOURCE
     SOURCE_HASH=sha512:54db950a8adf5998d4e309aff835269123e0e41937eff856cf59c8d11464a6479d20014ed5097d3d60726bfa44dfc2c1937e074a8b08edd069022ffde58af4eb
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-v$VERSION"
        WEB_SITE="http://www.rutschle.net/tech/sslh.shtml"
      LICENSE[0]="GPLv2+"
         ENTERED=20150228
        KEYWORDS=""
           SHORT="Applicative protocol multiplexer"
cat << EOF
sslh accepts connections on specified ports, and forwards them further based
on tests performed on the first data packet sent by the remote client.

Probes for HTTP, SSL, SSH, OpenVPN, tinc, XMPP are implemented, and any other
protocol that can be tested using a regular expression, can be recognised. A
typical use case is to allow serving several services on port 443 (e.g. to
connect to ssh from inside a corporate firewall, which almost never block
port 443) while still serving HTTPS on that port.

Hence sslh acts as a protocol demultiplexer, or a switchboard. Its name
comes from its original function to serve SSH and HTTPS on the same port.

sslh supports IPv6, privilege dropping, transparent proxying, and more.
EOF
