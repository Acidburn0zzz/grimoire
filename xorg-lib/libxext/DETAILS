           SPELL=libxext
             PKG=libXext
         VERSION=1.3.2
          SOURCE_HASH=sha512:5ed612f2c5e902648eb0438bfb8d9d6440a5baa19d95eb1253b51fe9ad8dcf903a7ee68a9455044d17ce0d486e421df0f98a069ab5ad1a49364f157bdf64efe7
  SECURITY_PATCH=1
#      SOURCE_GPG="gurus.gpg:$SOURCE.sig:UPSTREAM_HASH"
          SOURCE=${PKG}-${VERSION}.tar.bz2
   SOURCE_URL[0]=http://xorg.freedesktop.org/releases/individual/lib/${SOURCE}
SOURCE_DIRECTORY=${BUILD_DIRECTORY}/${PKG}-${VERSION}
        WEB_SITE=http://xorg.freedesktop.org/wiki
         ENTERED=20051125
      LICENSE[0]=XCL
           SHORT="Various X extensions"
cat << EOF
XShm X Shared Memory extension functions
XShmQueryExtension  checks  to  see if the shared memory extensions are
available for the specified display.
XShape X nonrectangular shape functions
The X11 Nonrectangular Window Shape Extension adds nonrectangular
windows to the X Window System.
Xmbuf X  multibuffering  functions
The  application  programming  library  for  the  X11 Double-Buffering,
Multi-Buffering, and Stereo Extension contains the interfaces described
below.
Xevi - X Extended Visual Information functions
The X11 Extended Visual Information extension (EVI) allows a client  to
determine  information about core X visuals beyond what the core protocol
provides.
DBE - Double Buffer Extension
The  Double  Buffer  Extension (DBE) provides a standard way to utilize
double-buffering within the framework of the X Window System.   Double-
buffering  uses  two buffers, called front and back, which hold images.
The front buffer is visible to the user; the back buffer is not.   Suc-
cessive  frames of an animation are rendered into the back buffer while
the previously rendered frame is displayed in the front buffer.  When a
new  frame  is ready, the back and front buffers swap roles, making the
new frame visible.  Ideally, this exchange appears to happen  instanta-
neously  to  the user, with no visual artifacts.  Thus, only completely
rendered images are presented to the user, and  remain  visible  during
the  entire  time  it  takes  to  render  a new frame.  The result is a
flicker-free animation.
EOF
