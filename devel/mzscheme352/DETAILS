           SPELL=mzscheme352
         VERSION=352
          SOURCE=mz-$VERSION-src-unix.tgz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/mz-$VERSION
   SOURCE_URL[0]=http://download.plt-scheme.org/bundles/$VERSION/mz/$SOURCE
     SOURCE_HASH=sha512:e6bd11718b1884301c066a9e3423b0030ae3359b2b9e0986d89e026fc91c4a590be5b39256eb8ad0360181d83d15b7df0a6f8f5b7d1fb2dc6e24412433527859
      LICENSE[0]=LGPL
        WEB_SITE=http://www.plt-scheme.org/software/mzscheme/
         ENTERED=20080910
        KEYWORDS="devel scheme"
           SHORT="an implementation of the Scheme programming language"
cat << EOF
This is version 352 of MzScheme, which is required for the Arc progamming
language.

MzScheme is an implementation of the Scheme programming language for Windows,
Mac OS X, and Unix. The name is pronounced "miz scheme", as in "Ms. Scheme".

MzScheme is R5RS-compliant, including the full numerical tower. It also
provides threads (on all platforms), exceptions, modules, class-based
objects, Unicode, regular-expression matching, TCP/IP, and more.

MzScheme compiles Scheme to byte code. At run time on x86, x86_64, and
PowerPC platforms, MzScheme converts byte code to native code through a
just-in-time compiler. Alternately, on all platforms, the mzc compiler
produces native code via C to run in MzScheme.

MzScheme supports access to foreign functions and libraries directly from
Scheme, as well as MzScheme-specific extensions that are implemented in C/C++.
MzScheme can also be embedded as an extension language within a C/C++
application. Interoperability with C/C++ is facilitated by the use of a
conservative garbage collector.
EOF
