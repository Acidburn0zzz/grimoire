           SPELL=tcc
         VERSION=0.9.24
          SOURCE=$SPELL-$VERSION.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://download.savannah.nongnu.org/releases/tinycc/$SOURCE
     SOURCE_HASH=sha512:f0d2727501d21a25bd92f6d6a0d903d86ce95b2fd9dfe406bc896312393aab4bc1a76d4ccbca0c4cb6494bb935435e6687cfc1daa75fc04ae9a78b0b1b786f3d
        WEB_SITE=http://fabrice.bellard.free.fr/tcc/
         ENTERED=20031218
      LICENSE[0]=LGPL
        KEYWORDS="compiler devel"
           SHORT="Tiny C is the smallest GNU/Linux C compiler"
cat << EOF
Tiny C Compiler - C Scripting Everywhere - The Smallest Linux C Compiler.

Features:
* SMALL! You can compile and execute C code everywhere, for example on rescue
  disks (about 100KB for x86 TCC executable, including C preprocessor,
  C compiler, assembler and linker).

* FAST! tcc generates optimized x86 code. No byte code overhead. Compile,
  assemble and link several times faster than GCC.

* UNLIMITED! Any C dynamic library can be used directly. TCC is heading
  torward full ISOC99 compliance. TCC can of course compile itself.

* SAFE! tcc includes an optional memory and bound checker. Bound checked code
  can be mixed freely with standard code.

* Compile and execute C source directly. No linking or assembly necessary.
  Full C preprocessor and GNU-like assembler included.

* C script supported : just add '#!/usr/local/bin/tcc -run' at the first line
  of your C source, and execute it directly from the command line.

* With libtcc, you can use TCC as a backend for dynamic code generation.
EOF
