           SPELL=duma
         VERSION=2.5.15
          SOURCE=${SPELL}_${VERSION//./_}.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/${SOURCE/.tar.gz/}
      SOURCE_URL=$SOURCEFORGE_URL/$SPELL/$SOURCE SOURCE_HASH=sha512:0e2abdb08cfbaf9fd0a6be348c831a83ac4ee86d2297dcd1c4d625ddb4b2c1c73eef05e2b895e291d5b8076b1baea559c89d475f30e409210df4ab69b71b6345
        WEB_SITE=http://duma.sourceforge.net
         ENTERED=20100527
      LICENSE[0]=GPL
        KEYWORDS="debugger devel"
           SHORT="Buffer over/underrun detector for C/C++ (fork of ElectricFence)."
cat << EOF
DUMA is an open-source library (under GNU General Public License) to detect
buffer overruns and under-runs in C and C++ programs. This library is a fork of
Buce Perens Electric Fence library and adds some new features to it. Features of
the DUMA library: 

- "overloads" all standard memory allocation functions like malloc(), calloc(),
  memalign(), strdup(), operator new, operator new[] and also their counterpart
  deallocation functions like free(), operator delete and operator delete[]
- utilizes the MMU (memory management unit) of the CPU:
  allocates and protects an extra memory page to detect any illegal access
  beyond the top of the buffer (or bottom, at the user's option)
- stops the program at exactly that instruction, which does the erroneous access
  to the protected memory page,
- allowing location of the defectice source code in a debugger
- detects erroneous writes at the non-protected end of the memory block at
  deallocation of the memory block
- detects mismatch of allocation/deallocation functions: f.e. allocation with
  malloc() but deallocation with operator delete
- leak detection: detect memory blocks which were not deallocated until program
  exit
- runs on Linux / U*ix and MS Windows NT/2K/XP operating systems
- preloading of the library on Linux (and some U*ix) systems allowing tests
  without necessity of changing source code or recompilation
EOF
