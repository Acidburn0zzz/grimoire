           SPELL=mzscheme
         VERSION=4.2
          SOURCE=mz-$VERSION-src-unix.tgz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/mz-$VERSION
   SOURCE_URL[0]=http://download.plt-scheme.org/bundles/$VERSION/mz/$SOURCE
     SOURCE_HASH=sha512:8f34d81f2e88223d077203acdb1e4d4ef601bf30c82ba28f6ecbeba03f6d6f363b7e3ab6e2164e9a4fd4d3d880651292ea125990cda518c6a3db4a05bc07c489
      LICENSE[0]=LGPL
        WEB_SITE=http://www.plt-scheme.org/software/mzscheme/
         ENTERED=20061215
        KEYWORDS="devel scheme"
           SHORT="an implementation of the Scheme programming language"
cat << EOF
MzScheme is an implementation of the Scheme programming language for Windows,
Mac OS X, and Unix. The name is pronounced "miz scheme", as in "Ms. Scheme".

MzScheme is R5RS-compliant, including the full numerical tower. It also
provides threads (on all platforms), exceptions, modules, class-based
objects, Unicode, regular-expression matching, TCP/IP, and more.

MzScheme compiles Scheme to byte code. At run time on x86, x86_64, and
PowerPC platforms, MzScheme converts byte code to native code through a
just-in-time compiler. Alternately, on all platforms, the mzc compiler
produces native code via C to run in MzScheme.

MzScheme supports access to foreign functions and libraries directly from
Scheme, as well as MzScheme-specific extensions that are implemented in C/C++.
MzScheme can also be embedded as an extension language within a C/C++
application. Interoperability with C/C++ is facilitated by the use of a
conservative garbage collector.
EOF
