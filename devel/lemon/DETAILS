           SPELL=lemon
         VERSION=0
          SOURCE="${SPELL}.c"
   SOURCE_URL[0]=http://www.sqlite.org/cvstrac/getfile/sqlite/tool/${SOURCE}
     SOURCE_HASH=sha512:8773ac025dc3813da0ef3444f4ec9820343f2c07e663f162767617a8f2955a1539e61e726b552b36528b37578f187901897f1a37857a8e410cc6bc7be223f0f5
         SOURCE2="lempar.c"
  SOURCE2_URL[0]=http://www.sqlite.org/cvstrac/getfile/sqlite/tool/${SOURCE2}
    SOURCE2_HASH=sha512:0584f3b8e26b9b99b76b06d282d3bfe96be771307be1bd04f0e024e6db8cd4a8041b42245c7c0eed2405c3f8dd469a7d6ee8eb13aec82abe80e2e2f4479d3a74
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}"
        WEB_SITE=http://www.hwaci.com/sw/lemon/
      LICENSE[0]=PD
         ENTERED=20090425
           SHORT="Lemon parser generator"
     GATHER_DOCS=off
cat << EOF
The Lemon program is an LALR parser generator.
It takes a context free grammar and converts it into a subroutine
that will parse a file using that grammar.
Lemon is similar to the much more famous programs "YACC" and "BISON".

But lemon is not compatible with either yacc or bison. There are
several important differences:
* Lemon using a different grammar syntax which is less prone to
  programming errors.
* The parser generated by Lemon is both re-entrant and thread-safe.
* Lemon includes the concept of a non-terminal destructor, which makes
  it much easier to write a parser that does not leak memory.
EOF
