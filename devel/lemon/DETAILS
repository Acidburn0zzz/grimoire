           SPELL=lemon
         VERSION=0
          SOURCE="${SPELL}.c"
   SOURCE_URL[0]=http://www.sqlite.org/cvstrac/getfile/sqlite/tool/${SOURCE}
     SOURCE_HASH=sha512:bebc89331f3c39b4982d100f6879cab976691e30c9cf5b28a2a2a88ae51b4de70c8fa576fcbe9dc56526bd19f303ccb1efe1e846229c4b2dd533e1575c613b56
         SOURCE2="lempar.c"
  SOURCE2_URL[0]=http://www.sqlite.org/cvstrac/getfile/sqlite/tool/${SOURCE2}
    SOURCE2_HASH=sha512:e04a6e859acbb80f439d3a6271725daf43974c664b8fa27c538f1f8aeda48b82c94362c01d8d84a6efb42ba386eda2da906edbc094779b3494674bb9cf41f46b
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}"
        WEB_SITE=http://www.hwaci.com/sw/lemon/
      LICENSE[0]=PD
         ENTERED=20090425
           SHORT="Lemon parser generator"
     GATHER_DOCS=off
cat << EOF
The Lemon program is an LALR parser generator.
It takes a context free grammar and converts it into a subroutine
that will parse a file using that grammar.
Lemon is similar to the much more famous programs "YACC" and "BISON".

But lemon is not compatible with either yacc or bison. There are
several important differences:
* Lemon using a different grammar syntax which is less prone to
  programming errors.
* The parser generated by Lemon is both re-entrant and thread-safe.
* Lemon includes the concept of a non-terminal destructor, which makes
  it much easier to write a parser that does not leak memory.
EOF
