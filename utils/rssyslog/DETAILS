           SPELL=rssyslog
         VERSION=20070117
          SOURCE="${SPELL}-${VERSION}.tgz"
   SOURCE_URL[0]=http://dfn.dl.sourceforge.net/sourceforge/${SPELL}/${SOURCE}
     SOURCE_HASH=sha512:d516e549fad571ec1350e246e9904d20fb200c84f5c6e4f1ba6f0208fb1583c8a606a4abdf5555d7b1071de2fb3e71c67046ba16420dd7baa6b46c3f25240808
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="http://sourceforge.net/projects/rssyslog/"
      LICENSE[0]=GPL
         ENTERED=20071225
           SHORT="rssyslog is a fast, network-only syslog daemon"
cat << EOF
rssyslog is a fast, network-only syslog daemon that sorts the messages to
different files based on source IP, facility and severity.  It is intended
to be used as a central syslog-server for a large number of devices.

rssyslog is written in C, and tries to minimise the number of
dependencies. Currently it depends only on libc.

It is not the most feature rich application on the net, and it never will
be. Still there is some work to be done. The TODO-file in this directory
identifies the most pressing issues.

The general philosophy behind rssyslog is that it should be as small as
possible and as simple as possible in order to be able to run as fast as
possible.

It avoids parsing more than needed of the message, it avoids using the string
scanning printf and scanf functions (and relatives) as much as possible,
though some sanitizing of the message must be done.

Messages are received from the net in one thread, passed through a ring buffer
and decoded and written to disk in another thread.  This should reduce the
risk of dropped messages at high loads during e.g. logfile rotation.
EOF
