           SPELL=zeroxml
         VERSION=1.0.6
          SOURCE="${SPELL}-${VERSION}.zip"
   SOURCE_URL[0]=http://www.adalin.com/downloads/${SOURCE}
     SOURCE_HASH=sha512:e330d04850399696e0e4a614b3aa33724f6006af377762fdc178bce7ae5b3b6284f2d8d3a769f3efdb39e3cc7959906073a8e2cdf4898a009b93f702fafc371a
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/ZeroXml-${VERSION}"
        WEB_SITE="http://www.adalin.com/"
      LICENSE[0]=BSD
         ENTERED=20140111
           SHORT="a cross-platform and lightweight XML file abstraction layer"
cat << EOF
ZeroXML is a cross-platform and lightweight XML file abstraction layer that
gets it's name from the fact that it can read XML files without allocating
any memory for internal use. The library supports both little-endian and
big-endian systems and is known to work on Windows, Linux and IRIX. Full
documentation is included in the package.

To achieve zero memory allocation operation the library maps the file to a
memory region and walks the XML tree every time a new node is accessed. XML
processing might be a bit slower this way but application memory will not
get fragmented.

Memory will only be allocated to handle client application requests. In all
cases a preallocated buffer can be provided by the client application to
store XML data for further processing.

A separate caching option is available that will create a node tree when a XML
file gets opened. As a result node searches will be much faster at the cost of
a small amount of memory (less than 16 bytes for every XML node in the file).
EOF
