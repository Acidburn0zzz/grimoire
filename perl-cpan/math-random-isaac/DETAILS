           SPELL=math-random-isaac
          SPELLX=Math-Random-ISAAC
         VERSION=1.004
          SOURCE=${SPELLX}-${VERSION}.tar.gz
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/J/JA/JAWNSY/${SOURCE}
     SOURCE_HASH=sha512:98fdfb28b207b4afe72ab82a2b564b06c5daaac15cdab2ce2ef698b16c0dcf5b23ac28fbebe170d2c6c7239fe6c97f634e5c03a8f2bd0aeb8369d0008b9ae0a2
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELLX}-${VERSION}"
         LICENSE=PD
        WEB_SITE=http://search.cpan.org/dist/Math-Random-ISAAC/
         ENTERED=20150920
        KEYWORDS="perl"
           SHORT="Perl interface to the ISAAC PRNG algorithm"
cat << EOF
As with other Pseudo-Random Number Generator (PRNG) algorithms like the Mersenne
Twister (see Math::Random::MT), this algorithm is designed to take some seed
information and produce seemingly random results as output.

However, ISAAC (Indirection, Shift, Accumulate, Add, and Count) has different
goals than these commonly used algorithms. In particular, it's really fast - on
average, it requires only 18.75 machine cycles to generate a 32-bit value.
This makes it suitable for applications where a significant amount of random
data needs to be produced quickly, such solving using the Monte Carlo method or
for games.

The results are uniformly distributed, unbiased, and unpredictable unless you
know the seed. The algorithm was published by Bob Jenkins in the late 90s and
despite the best efforts of many security researchers, no feasible attacks have
been found to date.
EOF
