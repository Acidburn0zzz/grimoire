           SPELL=config-param
         VERSION=3.000009
          SOURCE="Config-Param-${VERSION}.tar.gz"
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/T/TH/THORGIS/${SOURCE}
     SOURCE_HASH=sha512:fb1dcf9a1f97af77ac99171cabb39b9c36a177ce34681907983783170969e54722732831849fd7f8c6ae56ee6a2288759291233555bd802cd3a2a9ddac15041a
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/Config-Param-${VERSION}"
        WEB_SITE="http://search.cpan.org/~thorgis/Config-Param/"
      LICENSE[0]=ART
         ENTERED=20120721
           SHORT="all you want to do with parameters for your program (or someone else's)"
cat << EOF
The basic task is to take some description of offered parameters and return
a hash ref with values for these parameters, influenced by the command line
and/or configuration files. The simple loop from many years ago now is about
the most comprehensive solution for a program's param space that I am aware
of, while still supporting the one-shot usage via a single function call
and a flat description of parameters.

It handles command line parameters (somewhat flexible regarding the number of
"-", but insisting on the equal sign in --name=value), defining and handling
standard parameters for generating helpful usage messages and parses as well
as generates configuration files.
EOF
