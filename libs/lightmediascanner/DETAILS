           SPELL=lightmediascanner
if  [[ "$LIGHTMEDIASCANNER_SCM"  ==  "y"  ]];  then
  if  [[  "$LIGHTMEDIASCANNER_SCM_AUTOUPDATE"  ==  "y"  ]];  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=git
  fi
          SOURCE=$SPELL-git.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-git
  FORCE_DOWNLOAD="on"
   SOURCE_URL[0]=git://staff.get-e.org/users/barbieri/$SPELL:$SPELL-git
   SOURCE_IGNORE=volatile
else
         VERSION=0.4.1.0
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=https://garage.maemo.org/frs/download.php/8852/$SOURCE
      SOURCE_GPG="gurus.gpg:$SOURCE.sig:WORKS_FOR_ME"
fi
      LICENSE[0]=GPL
        KEYWORDS="libs"
        WEB_SITE=http://lms.garage.maemo.org/
         ENTERED=20080312
           SHORT='Optimized library for parsing and scanning directories'
cat << EOF
Lightweight media scanner meant to be used in not-so-powerful devices, like
embedded systems or old machines.

Provides an optimized way to recursively scan directories, handling the parser
in a child process, avoiding breaks of the main process when parsers break
(quite common with such bad libs and tags).

Parsers are plugins in the form of shared objects, so it's easy to add new
without having to recompiling the scanner.

The scanner will use SQLite3 to store file-mtime association, avoiding parsing
files that are already up-to-date. This SQLite connection and the file id
within the master table 'files' are handled to plugins for relationship with
other tables.

Applications should then access the SQLite3 database to get all the
informations about scanned media. See tables and fields description at
http://lms.garage.maemo.org/api/index.html (end of the page). You can use any
SQLite3 access library, for instance you have SQLObject, SQLAlchemy and Storm
for python, Sequel for Ruby and possible others.
EOF
