           SPELL=libx86
         VERSION=1.1
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://www.codon.org.uk/~mjg59/libx86/downloads/$SOURCE
        WEB_SITE=http://www.codon.org.uk/~mjg59/libx86/
         ENTERED=20080603
      LICENSE[0]=BSD
     SOURCE_HASH=sha512:b946555a45405a06fdf00b3e2522fc99dd7c61349c32726221aa60117a8d3da6da4b44188b1ebb208368e12b396f26055437cebcc8a0e6df10c7a006182c9280
        KEYWORDS="lib x86"
           SHORT='a hardware-independent library for executing real-mode x86 code'
cat << EOF
It's often useful to be able to make real-mode x86 BIOS calls from userland. lrmi provides a simple interface to this for x86 machines, but this doesn't help on other platforms. libx86 provides the lrmi interface, but will also run on platforms such as amd64 and alpha. 

libx86 is built on top of two bodies of code - lrmi and x86emu. x86emu is a generic x86 emulator originally provided by Scitech and now maintained as part of the X.org distribution.

On x86 platforms, libx86 will use the vm86 interface provided by most modern kernels in order to execute code. On non-x86 platforms, an interface layer is provided to allow x86emu to be used to execute lrmi function calls. The API is identical in both cases, meaning that applications can be written without having to care about what's going on behind the scenes. 
EOF
