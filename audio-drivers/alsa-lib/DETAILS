           SPELL=alsa-lib
if [[ $ALSA_LIB_BRANCH == scm ]]; then
  if [[ $ALSA_LIB_AUTOUPDATE == y ]]; then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=git
  fi
          SOURCE=$SPELL-git.tar.bz2
   SOURCE_URL[0]=git://git.alsa-project.org/alsa-lib.git:alsa-lib-git
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-git"
  FORCE_DOWNLOAD=1
else
         VERSION=1.0.27.2
     SOURCE_HASH=sha512:3fa9160e001cf21ddc6332c3748f8aa27bd1b514616fd1a9993c34128fe99d07e2dfc5f1a9177e1c17456d1361496f90bf3552f940fd85c6ea5ac9bbc30fe8ce
#      SOURCE_GPG=gurus.gpg:$SOURCE.sig:WORKS_FOR_ME
          SOURCE=$SPELL-$VERSION.tar.bz2
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
   SOURCE_URL[0]=ftp://ftp.alsa-project.org/pub/lib/$SOURCE
fi
      LICENSE[0]=LGPL
        KEYWORDS="drivers audio"
        WEB_SITE=http://www.alsa-project.org/
         ENTERED=20010922
           SHORT="library API for using the Advanced Linux Sound Architecture"
cat << EOF
The Advanced Linux Sound Architecture project is being developed in the Linux
operating system and is released under version 2 of the GPL (GNU general public
license) and the LGPL (GNU library general public license).
Primary goals:
1. Create a fully modularized sound driver which supports kerneld and kmod.
2. Create the ALSA Kernel API which surpasses the current OSS API.
3. Maintain compatibility with most OSS/Lite binaries.
4. Create the ALSA Library (C, C++), which simplifies ALSA application
development.
5. Create the ALSA Manager, an interactive configuration program for the
driver.

This spell provides the alsa init script.
EOF
