diff -r cd93ab53ed18 jack/jack.h
--- a/jack/jack.h	Wed Dec 13 07:09:13 2006 +0300
+++ b/jack/jack.h	Mon Jan 08 22:49:38 2007 +0300
@@ -730,6 +730,13 @@ int  jack_engine_takeover_timebase (jack
 int  jack_engine_takeover_timebase (jack_client_t *);
 
 /**
+ * @return current system time in microseconds, using jack clock source.
+ *
+ * This function is a client version of jack_get_microseconds().
+ */
+jack_time_t jack_get_time();
+
+/**
  * @return the time in frames that has passed since the JACK server
  * began the current process cycle.
  */
@@ -750,6 +757,16 @@ jack_nframes_t jack_frame_time (const ja
  * jack_frame_time() in correlation to the current process cycle.
  */
 jack_nframes_t jack_last_frame_time (const jack_client_t *client);
+
+/**
+ * @return estimated time in microseconds of the specified frame time
+ */
+jack_time_t jack_frames_to_time(const jack_client_t *client, jack_nframes_t);
+
+/**
+ * @return estimated time in frames for the specified system time.
+ */
+jack_nframes_t jack_time_to_frames(const jack_client_t *client, jack_time_t);
 
 /**
  * @return the current CPU load estimated by JACK.  This is a running
diff -r cd93ab53ed18 libjack/transclient.c
--- a/libjack/transclient.c	Wed Dec 13 07:09:13 2006 +0300
+++ b/libjack/transclient.c	Mon Jan 08 22:53:39 2007 +0300
@@ -231,8 +231,14 @@ jack_frames_since_cycle_start (const jac
 					/ 1000000.0f) * usecs);
 }
 
-jack_nframes_t
-jack_frame_time (const jack_client_t *client)
+jack_time_t
+jack_get_time()
+{
+	return jack_get_microseconds();
+}
+
+jack_nframes_t
+jack_time_to_frames(const jack_client_t *client, jack_time_t now)
 {
 	jack_frame_timer_t time;
 	jack_control_t *ectl = client->engine;
@@ -240,8 +246,6 @@ jack_frame_time (const jack_client_t *cl
 	jack_read_frame_time (client, &time);
 
 	if (time.initialized) {
-		jack_time_t now = jack_get_microseconds();
-
 #if 0
 		fprintf (stderr, "now = %Lu current wakeup = %Lu next = %Lu frames = %lu + %f => %lu\n", 
 			 now, time.current_wakeup, time.next_wakeup, time.frames,
@@ -250,14 +254,20 @@ jack_frame_time (const jack_client_t *cl
 			 time.frames + 
 			 (long) rint (((double) (now - time.current_wakeup)/ 
 						 (time.next_wakeup - time.current_wakeup)) * ectl->buffer_size));
-#endif		
+#endif
 
 		return time.frames + 
 			(long) rint (((double) ((long long) (now - time.current_wakeup))/ 
 						((long long) (time.next_wakeup - time.current_wakeup))) * ectl->buffer_size);
-	} 
-
+	}
 	return 0;
+}
+
+jack_nframes_t
+jack_frame_time (const jack_client_t *client)
+{
+	jack_time_t now = jack_get_microseconds();
+	return jack_time_to_frames(client, now);
 }
 
 jack_nframes_t
@@ -266,6 +276,23 @@ jack_last_frame_time (const jack_client_
 	jack_frame_timer_t current;
 	jack_read_frame_time (client, &current);
 	return current.frames;
+}
+
+jack_time_t
+jack_frames_to_time(const jack_client_t *client, jack_nframes_t frames)
+{
+	jack_frame_timer_t time;
+	jack_control_t *ectl = client->engine;
+
+	jack_read_frame_time (client, &time);
+
+	if (time.initialized) {
+		return time.current_wakeup +
+			(long) rint (((double) ((long long) (frames - time.frames)) *
+						((long long) (time.next_wakeup - time.current_wakeup)) / ectl->buffer_size) );
+	} 
+
+	return 0;
 }
 
 jack_nframes_t
