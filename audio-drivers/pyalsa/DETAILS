           SPELL=pyalsa
if [[ $PYALSA_GIT == y ]]; then
  if  [[ $PYALSA_GIT_AUTOUPDATE == y ]];  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=git
  fi
          SOURCE=$SPELL-git.tar.bz2
   SOURCE_URL[0]=git://git.alsa-project.org/alsa-python.git:pyalsa-git
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-git
  FORCE_DOWNLOAD=1
else
         VERSION=1.0.17rc1
          SOURCE=$SPELL-$VERSION.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=ftp://ftp.alsa-project.org/pub/$SPELL/$SOURCE
     SOURCE_HASH=sha512:add60bd075af2d47b1fcdd1e5f3816412bda333838837d92545f235d1df738a3cdc7860979f184eb5af795b512fadceaf253f7c1ce0cc476e0962a16945704ae
fi
        WEB_SITE=http://www.alsa-project.org/
         ENTERED=20070612
      LICENSE[0]=GPL
        KEYWORDS="drivers audio python"
           SHORT="Python bindings for the Advanced Linux Sound Architecture project"
cat << EOF
From http://www.alsa-project.org/intro.php3
The Advanced Linux Sound Architecture project is being developed in the
Linux operating system and is released under version 2 of the GPL (GNU
general public license) and the LGPL (GNU library general public license).

Primary goals: 

1. Create a fully modularized sound driver which supports kerneld and kmod.

2. Create the ALSA Kernel API which surpasses the current OSS API.

3. Maintain compatibility with most OSS/Lite binaries.

4. Create the ALSA Library (C, C++), which simplifies ALSA application
development.

5. Create the ALSA Manager, an interactive configuration program for
the driver.

Lastly, this sorcery spell supports one and only one sound card.
If you have more or it is ISA, then you will likely have to create
a custom spell.
EOF
