           SPELL=alsa-oss
if [[ $ALSA_OSS_GIT == y ]]; then
  if  [[ $ALSA_OSS_GIT_AUTOUPDATE == y ]];  then
         VERSION=$(date +%Y%m%d)
  else
         VERSION=git
  fi
          SOURCE=$SPELL-git.tar.bz2
   SOURCE_URL[0]=git://git.alsa-project.org/alsa-oss.git:alsa-oss-git
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-git
  FORCE_DOWNLOAD=1
else
         VERSION=1.0.17
          SOURCE=$SPELL-$VERSION.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=ftp://ftp.alsa-project.org/pub/oss-lib/$SOURCE
     SOURCE_HASH=sha512:240a11f42f27af1d902902c5c53d265f43846712ad973ca69e44602c37a18c92b8c4c70434ef26df5b44d592a9d41f90ee5fa0b42d86d31c8d89299d510298ea
fi
        WEB_SITE=http://www.alsa-project.org/
         ENTERED=20041026
      LICENSE[0]=LGPL
        KEYWORDS="drivers audio"
           SHORT="A OSS wrapper and utilities for the OSS layer in the Advanced Linux Sound Architecture."
cat << EOF
From http://www.alsa-project.org/intro.php3
The Advanced Linux Sound Architecture project is being developed in the Linux operating system and is released under version 2 of the GPL (GNU general public license) and the LGPL (GNU library general public license).
Primary goals: 
1. Create a fully modularized sound driver which supports kerneld and kmod.
2. Create the ALSA Kernel API which surpasses the current OSS API.
3. Maintain compatibility with most OSS/Lite binaries.
4. Create the ALSA Library (C, C++), which simplifies ALSA application development.
5. Create the ALSA Manager, an interactive configuration program for the driver.

This spell installs the preferred meathod of using the OSS compatiblity layer (according to the Alsa development site.  It includes a script called 'aoss' that acts as a wrapper for programs to utilise the OSS compatabliity layer without having to have the modules loaded.
EOF
