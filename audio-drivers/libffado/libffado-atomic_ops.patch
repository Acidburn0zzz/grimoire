Index: src/libieee1394/IsoHandlerManager.cpp
===================================================================
--- src/libieee1394/IsoHandlerManager.cpp	(Revision 1319)
+++ src/libieee1394/IsoHandlerManager.cpp	(Arbeitskopie)
@@ -27,7 +27,7 @@
 #include "cycletimer.h"
 #include "libstreaming/generic/StreamProcessor.h"
 
-#include "libutil/Atomic.h"
+#include <atomic_ops.h>
 #include "libutil/PosixThread.h"
 #include "libutil/SystemTimeSource.h"
 #include "libutil/Watchdog.h"
@@ -82,7 +82,7 @@
 IsoTask::requestShadowMapUpdate()
 {
     debugOutput(DEBUG_LEVEL_VERBOSE, "(%p) enter\n", this);
-    INC_ATOMIC(&request_update);
+    AO_fetch_and_add1(&request_update);
 
     // get the thread going again
     signalActivity();
@@ -227,7 +227,7 @@
     // if some other thread requested a shadow map update, do it
     if(request_update) {
         updateShadowMapHelper();
-        DEC_ATOMIC(&request_update); // ack the update
+        AO_fetch_and_sub1(&request_update); // ack the update
         assert(request_update >= 0);
     }
 
Index: src/libieee1394/IsoHandlerManager.h
===================================================================
--- src/libieee1394/IsoHandlerManager.h	(Revision 1319)
+++ src/libieee1394/IsoHandlerManager.h	(Arbeitskopie)
@@ -31,6 +31,7 @@
 
 #include "IsoHandler.h"
 
+#include <atomic_ops.h>
 #include <sys/poll.h>
 #include <errno.h>
 #include <vector>
@@ -94,7 +95,7 @@
         IsoHandlerManager& m_manager;
 
         // the event request structure
-        int32_t request_update;
+        AO_t request_update;
 
         // static allocation due to RT constraints
         // this is the map used by the actual thread
