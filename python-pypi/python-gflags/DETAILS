           SPELL=python-gflags
         VERSION=2.0
          SOURCE=$SPELL-$VERSION.tar.gz
   SOURCE_URL[0]=http://python-gflags.googlecode.com/files/$SOURCE
   SOURCE_URL[1]=http://pypi.python.org/packages/source/p/$SPELL/$SOURCE
     SOURCE_HASH=sha512:28566acffd092f09105f3b9ad3be4ada11f024f940914e6efb103907f3779283c63bdfe13edad83aa470c5e887b49ad8b05031fc1895f3bad9b5d9c368bbfe18
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
        WEB_SITE=http://code.google.com/p/python-gflags/
      LICENSE[0]=BSD
         ENTERED=20130120
        KEYWORDS="python getopt optparse"
           SHORT="commandline flags module for Python"
cat << EOF
This project is the python equivalent of gflags, a commandline flag
implementation for C++ originally written by Google. It is intended to be used
in situations where a project wants to mimic the command-line flag handling of a
C++ app that uses gflags, or for a Python app that, via swig or some other means,
is linked with a C++ app that uses gflags.

The python-gflags package contains a library that implements commandline flags
processing. As such it's a replacement for getopt(). It has increased
flexibility, including built-in support for Python types, and the ability to
define flags in the source file in which they're used. (This last is its major
difference from OptParse.)
EOF
