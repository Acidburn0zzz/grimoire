           SPELL=pytest-xdist
         VERSION=1.15.0
          SOURCE="${SPELL}-${VERSION}.tar.gz"
   SOURCE_URL[0]=https://pypi.org/packages/source/p/${SPELL}/${SOURCE}
     SOURCE_HASH=sha512:6429bd0c85024a2dcb453e4264f06d4a548637c4dcdeabf73d2b78a112ace70ff61cf0849a4845cc70a7650d10a99e5fe1087d3b7dba4b941ec0a771fc9338ed
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE=https://github.com/pytest-dev/pytest-xdist
      LICENSE[0]=MIT
         ENTERED=20170222
           SHORT="py.test plugin for distributed testing and loop-on-failing modes"
cat << EOF
The pytest-xdist plugin extends py.test with some unique test execution modes:

* test run parallelization: if you have multiple CPUs or hosts you can use those
  for a combined test run. This allows to speed up development or to use special
  resources of remote machines.
* --boxed: run each test in a boxed subprocess to survive SEGFAULTS or otherwise
  dying processes
* --looponfail: run your tests repeatedly in a subprocess. After each run
  py.test waits until a file in your project changes and then re-runs the
  previously failing tests. This is repeated until all tests pass after which
  again a full run is performed.
* Multi-Platform coverage: you can specify different Python interpreters or
  different platforms and run tests in parallel on all of them.

Before running tests remotely, py.test efficiently "rsyncs" your program source
code to the remote place. All test results are reported back and displayed to
your local terminal. You may specify different Python versions and interpreters.
EOF
