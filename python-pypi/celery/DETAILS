           SPELL=celery
         VERSION=3.0.13
          SOURCE=$SPELL-$VERSION.tar.gz
   SOURCE_URL[0]=http://pypi.python.org/packages/source/c/$SPELL/$SOURCE
     SOURCE_HASH=sha512:20bfa638893497f1bbb29859fa0b6f488341aa07d0243da7a713642b9723825de7f747dca09d0f5544dddc7b9595775e947ce247d03204f4080be51d5e3a4955
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
        WEB_SITE=http://celeryproject.org/
      LICENSE[0]=BSD
         ENTERED=20130120
           SHORT="Distributed Task Queue"
cat << EOF
Task queues are used as a mechanism to distribute work across threads or
machines.

A task queue's input is a unit of work, called a task, dedicated worker
processes then constantly monitor the queue for new work to perform.

Celery communicates via messages using a broker to mediate between clients and
workers. To initiate a task a client puts a message on the queue, the broker
then delivers the message to a worker.

A Celery system can consist of multiple workers and brokers, giving way to high
availability and horizontal scaling.
EOF
