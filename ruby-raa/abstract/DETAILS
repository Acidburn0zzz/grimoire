           SPELL=abstract
         VERSION=1.0.0
          SOURCE="${SPELL}_${VERSION}.tar.bz2"
   SOURCE_URL[0]=http://rubyforge.org/frs/download.php/9171/${SOURCE}
     SOURCE_HASH=sha512:bd335ac3b51ee2a0dce9d5fd57d110a3a6772e249c702b775400f780ac5934a39bea3707eb8677952c567b1ddea22a502ad6fbf73d2e753191f6c2d9d669756a
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}_${VERSION}"
        WEB_SITE="http://rubyforge.org/projects/abstract"
      LICENSE[0]=RUBY
         ENTERED=20080116
           SHORT="a library which enable you to define abstract method in Ruby."
cat << EOF
'abstract.rb' is a library which enable you to define abstract method in Ruby.

The followings are examples:

  ## example1. (shorter notation) require 'rubygems' # if installed with
  'gem install' require 'abstract' class Foo
    abstract_method 'arg1, arg2=""', :method1, :method2, :method3
  end

  ## example2. (RDoc friendly notation) require 'rubygems' # if installed with
  'gem install' require 'abstract' class Bar
    # ... method1 description ...  def method1(arg1, arg2="")
      not_implemented
    end # ... method2 description ...  def method2(arg1, arg2="")
      not_implemented
    end
  end


Abstract method makes your code more descriptive.  It is useful even for
dynamic language such as Ruby.
EOF
