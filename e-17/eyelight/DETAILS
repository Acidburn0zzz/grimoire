           SPELL=eyelight
if [[ $ELEMENTARY_AUTOUPDATE == y ]]; then
         VERSION=$(date +%Y%m%d)
else
         VERSION=svn
fi
          SOURCE=$SPELL-svn.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-svn
   SOURCE_URL[0]=svn_http://svn.enlightenment.org/svn/e/trunk/PROTO/$SPELL:$SPELL
  FORCE_DOWNLOAD=on
   SOURCE_IGNORE=volatile
        WEB_SITE=http://watchwolf.fr/blog/index.php?category/Enlightenment/Eyelight
         ENTERED=20091208
      LICENSE[0]=BSD
           SHORT="Eyelight is a presentation viewer using Edje to render the slides."
cat << EOF
Eyelight is a presentation viewer using Edje to render the slides. The slides are created in a text file (an ELT file), which use a syntax closed to the syntax used in a EDC file, then the viewer parse and compile this file and display the presentation.

Eyelight was started during the Google Summer of Code 2008. The initial aims was to create an application which read a text file, parse it and then display an Edje presentation. Eyelight has been modified a lot since this first version :

    * At the beginning, Eyelight created an edc file from the presentation file, the result was a list of macros call. The theme file was a list of macros which was called by the edc presentation file. And finally we used edje_cc to create an edj file and we get the presentation. Now the theme file is a classic edj file with a list of groups (text item, image, video ...) and the viewer load theses group when necessary (item text -> load the group text item) like all edje applications do.
    * A Eyelight smart object has been created. This means you can use Eyelight in all EFL applications (Elementary, Edje ...).
    * The API Eyelight_Edit appears. This API allows to edit a presentation on the fly : add a slide, delete an area ... Then the new presentation can be saved into an ELT file.
EOF
